const mainText = {
    "MAIN_IMAGE": "img/bike_riding/main_picture_3.jpg",
    "ABOUT_IMAGE": "img/random/main_picture.jpg",
    "INTRO_TEXT": "My name is Jason Kasari, and I’m a software developer/bike industry professional/chimney sweep/lifelong learner. I am passionate about engaging in new ideas and about working alongside others to solve problems.",
    "ABOUT_TEXT": "Growing up I was always building something with my hands. From Legos to wooden structures for mountain bikes, I was always working on something. I started riding bikes at a very young age, and naturally, I started fixing the bikes I was riding. Mechanical understanding came naturally to me. At 14 I begin volunteering as a mechanic at the local nonprofit community bike shop to gain job experience. A few years later, I would join the high school robotics team. I designed and worked exclusively on the mechanical aspects of the robot. Often times poking fun at the software kids for not understanding how a crescent wrench works. During this time I started taking classes at Central Oregon Community College and was quickly becoming a full-time mechanic at Hutch's Bicycles. I was very young at the shop working with both adult coworkers and customers. By the time I left in 2015 I had earned more nicknames than I could count and had become a key person at the shop. I noticed that a lot of my coworkers had degrees in fields they decided not to pursue. So when it came time to move on to university I questioned if I was really ready to 100% commit to a career. I chose instead to move to Bellingham Washington to work in bike shops until I had a better idea of what I wanted to do, gaining valuable life experiences along the way. The next 5 or so years in Washington were filled with enough bike riding, adventures, and general shenanigans to last a lifetime! I gained many life skills and waited patiently for a new career to present itself. While working late at the Lost Co bike shop one night, a buddy of mine convinced me to give coding a try that winter. And much to the dismay of my high school self, I loved it. I found that all the mechanical problem-solving skills I had gained translated over perfectly to software. My friend Erik, a senior software engineer at Mozzila, first helped me get started with c++. Next, my dad sent me a starter Arduino kit and that really got me going. All of a sudden I could design physical objects and then use software to bring them to life, it doesn’t get any cooler than that! I now have 100% confidence that this is what I want to do for a career. I have lofty goals for where I see myself and am willing to put in the work to get there!!",
    "EMAIL": "email | jkasari@outlook.com",
    "PHONE": "phone | 541-610-5575",
    "GITHUB": "github | jkasari",
    "LINKEDIN": "linkedin | /in/jkasari",
}

const colors = {
    "COLOR_1": "#C7CACC",
    "COLOR_2": "#202d31",
    "COLOR_3": "#F1CB24",

}

const blogPosts = [
    {
        "ID": "0",
        "TITLE": "Marine Cytometery",
        "TITLE_COLOR": "COLOR_1",
        "TILE_TEXT": "- Cool science machines for science.",
        "TILE_IMAGE": "img/marcy/lights_on_good.jpg",
        "HEADER_IMAGE": "img/marcy/lab1.jpg",
        "CONTENT": {
            "TITLE_1": "How I Ended up Here",
            "TEXT_1": "I was working as a chimney sweep at the time when I found myself checking out a lab a customer had at their house. This person ended up being Ger Van Den Engh, a big name in flow cytometry with a resume too long to list here. Ger in his retirement was designing a refined flow cytometry with some long-time colleagues. After talking for a bit, I asked if Ger would be interested in letting me come back over during my free time. Ger happily agreed and we met a couple of weeks later. At first, I just wanted to understand exactly what he was doing I had no intention of working on the project. Ger was excited by my eagerness to learn and gave me some basic tasks as a sort of test. After this, I slowly started to take on more and more work with the cytometer.",
            "TEXT_2": "A flow cytometer is a complex piece of equipment. They are used to quickly sort particles too small for the human eye to see. Most commonly, the particles being sorted are cells. All the machines work more or less in the same fashion. The particles are shot through a tiny water stream that is then separated into droplets. A particle floating in one of these drops is referred to as an event. Lasers are then used to analyze each event and report back to the cytometer with what they saw. The machine will then choose which test tube to sort the droplet into. It moves the droplets by giving them an electrical charge. Metal rails then guide the charged drop to its destination. Where things get cool is the fact that the machine can do this 50,000 times a second, with particles smaller than most microscopes can pick up. These machines are a vital part of microbiology research.",
            "TITLE_4": "Intern",
            "TEXT_4": "After our second meeting, Ger offered me a casual paid internship to help with the Arduino on board. Now all the fancy cell sorting lasers, photomultipliers and power rails are controlled by FPGAs. FPGAs offer a much quicker response time for multiple inputs than a regular computer. They are a very advanced embedded system. Fortunately for me, the machine has many other functions not quite as advanced. Ger chose to use an Arduino to control the basic functions of the machine, such as supplying pressure to the machine or turning on and off the tub lights. This is what I started out working with. Ger would give me basic assignments to increase the functionality of the machine.",
            "IMAGE_2": "img/marcy/fluidics_board_1.jpg",
            "TITLE_2": "Working on the Machine",
            "TEXT_3": "My favorite assignment was figuring out how to light the inside of the tub. If you have spent any amount of time on this site, it should be obvious I really like RGB LEDs. So naturally, this is what I proposed to Ger that we use. Ger was curious and told me to create a prototype so he could see them in person. This was such a cool opportunity to design something on my own. I quickly had a working demo tossed together, including a 3D-printed light bar to house the lights. Ger was very happy with what I had done and agreed to implement the system. He then of course offered plenty of constructive criticism and after working together to design the system in place now. He wanted LEDs behind the stream to color single whether the rails were live or not. This was my first custom-designed PCB. The lights are still in a developmental phase, but I am beside myself that I could contribute something to a machine like this and learn so much along the way. ",
            "IMAGE_1": "img/marcy/lights_compared.jpg",
            "IMAGE_3": "img/marcy/first_pcb_intub.jpg",
            "TEXT_5": "Using the first Arduino went so well, we decided to use the second one in charge of controlling the fluidics module. Like any good piece of lab equipment, this thing has tubes all over it! Each one of those tubes needs to have a very specific pressure, not to mention start-up and closing procedures. This is my current project. I am immensely pleased to work on this. Ger is obviously leading the way but takes time to listen to my ideas and responds constructively. I feel like I am helping while also learning so much. Even though what I am working on is simple, I find it so valuable just to watch a seasoned professional solve design problems.",
            "IMAGE_4": "img/marcy/wires.jpg",
            "TITLE_3": "Future",
            "TEXT_6": "This has been a huge step forward in my goals of self-education. I look forward to continuing to work with Ger and contributing more as my knowledge base grows. The amount of knowledge in the room with the team at Marine Cytometry is insane. If nothing else it has been a huge inspiration just to see what goes into designing ground-breaking technology. ",
        },
    },
    {
        "ID": "1",
        "TITLE": "Binary Clock",
        "TITLE_COLOR": "COLOR_3",
        "TILE_TEXT": "- Using colors to represent binary, and binary to represent time.",
        "TILE_IMAGE": "img/binary_clock/clock.gif",
        "HEADER_IMAGE": "img/binary_clock/title-image.jpg",
        "CONTENT": {
            "TITLE_1": "Problem",
            "TEXT_1": "I was starting to work with 0's and 1's and could not yet fluently think in binary. ",
            "TITLE_2": "Solution",
            "TEXT_2": "Spend approximately 8 million hours building a clock that tells time in binary and does some other cool stuff.",
            "TITLE_5": "The Clock",
            "TEXT_3": "The final clock uses colors to represent 0’s and 1’s. It has two displays, one that tells time in 16bits and one in 24bits. The 16bit uses 4bits for hours and 6bits for minutes and seconds. The 24bit displays time in 6 binary numbers, each using 4bits. This second display reads like a digital clock: 02:45:37. All the colors are adjustable and the clock automatically adjusts its brightness based on the surrounding light. When the clock is tipped, the time-telling LEDs bounce around the screen with gravity. I am very happy with the final product, but it was quite a journey to get here.",
            "IMAGE_1": "img/binary_clock/displays-sidebyside.jpg",
            "TEXT_4": "A long time ago, I thought binary was simply too much for a human brain to understand. I mean, how could one possibly make sense of 01000010 01001111 01001111 01000010 01010011? Working at Marine Cytometry was my first introduction to the concept of a register. This made it obvious that despite understanding binary at the time, I still couldn’t quickly translate from hex to binary to base 10 in my head. Now this really isn’t that big of an issue and the solution would have come naturally with time, but I saw the 8x8 RGB LED grid lying in a bin and my imagination went wild.",
            "TEXT_5": "I had a working prototype of what I wanted within a few hours. Each LED would use two colors to represent 0 or 1. It used 4bits to tell hours, 8bits for minutes, and seconds. I duct-taped some plastic I had lying around to mask the glare of the LEDs and sat back. This was too easy, the clock needed to do more. Again, I had basically achieved my original goal at this point. Reading the clock became easy within a day or two, but I wasn’t satisfied with the project yet. ",
            "IMAGE_2": "img/binary_clock/first-with-screen.jpg",
            "TEXT_6": "I had seen a random Arduino project online where a person had an LED grid with specific LEDs that would bounce around when the grid was tipped. I saw no reason that my clock shouldn’t do exactly the same thing. I had an accelerometer strapped to the back of the grid instantly. This new idea turned into quite the lesson in programming structure. I struggled with design layouts that would let the project function both as a clock and respond to the accelerometer. I ended up taking a mechanical approach, how would I solve this problem using real-life objects? The code I ended up with treats each time-telling LED like its own independent object, tasked only with changing its color when told. This approach allows each object in my code to only be ",
            "IMAGE_8": "img/binary_clock/fall-down.jpg",
            "TEXT_7": "The clock also had an issue when being used at night, with the LEDs bright enough to see during the day, they lit the entire room at night. I grabbed a simple photoresistor and went to work. The first Idea I had was to change the color of the LEDs along with the brightness. This would allow me to choose color templates that had varying amounts of contrast depending on the room light. This worked great with the original plastic screen, but the contrast problem went away as I improved the screen design. So I started directly feeding the readings from the photoresistor into the brightness of the new screen. This worked great in theory, but the sensitivity of the photoresistor was too high and the screen was left flickering in anything but very consistent light. This final problem was solved using the software. I wrote an algorithm that took a variable input stream and returned a smooth output stream. Now the screen smoothly dims or brightens with the surrounding light. ",
            "TEXT_8": "With the software and electronics mostly done, I needed housing that wasn’t just duct tape and plastic. This project was the reason I ended up buying a 3D printer. The printer seemed like the best solution to solve the lights bleeding into each other. A printed grid fit over the LEDs created nice sharp squares. The rest of the housing was a simple box. Next, it was time for the screen itself. After trying every random semi-transparent material I had access to, I ended up with plexiglass with sticker vinyl covering one side. This makes it possible for the lights to dim enough at night and still have a sharp contrast. A couple of tweaks on the outer case and this thing was looking pretty good compared to the prototype." ,
            "TEXT_9": "Finally, operating the clock as a clock was the last step. I am a firm believer in making controls as simple and intuitive as possible. I settled on 3 buttons, and each one has an immediate nonpermanent effect on the clock. The first button changes the display, the second changes the color of the time-telling LEDs, and the third changes the background. This means that anybody can easily figure out the clock operation without the need for instructions. I found that holding a button down for a different result is intuitive for most people. For this reason, holding the first button down puts the clock in time-adjust mode. It is very intuitive and easy to use. ",
            "IMAGE_9": "img/binary_clock/v1-v2.jpg",
            "TITLE_3": "Skills Used",
            "TEXT_10": "Because I worked this project early on, I was exposed to many concepts for the first time during the build. This was my first time working with i2c and Arduinos Wire library. This was also both the biggest electronic and software project I had taken at the time. Developing the software made me much more comfortable with the underlying concepts behind c++. The program is heavy for an Arduino Nano and I had to go back multiple times to better allocate memory to save space. Building the electronic side showed me how tedious soldering PCB boards is. This showed me the importance of learning to design my own printed PCB boards. The case gave me a good intro to Fusion 360 and 3D modeling. The previous 3D modeling software I had used was AutoCad back in High School. Above all, this project gave me so much problem-solving experience. ",
            "IMAGE_7": "img/binary_clock/3d-printing.jpg",
            "IMAGE_6": "img/binary_clock/inside.jpg",
            "TITLE_4": "Future",
            "TEXT_11": "For now, the clock works, and I use it every day to tell time. I have far surpassed my original goal, but I’m still not quite satisfied. I plan to revisit this project in the next few years as I gain more knowledge. I would really like to design and manufacture a specific board for it. This would allow me to make the design much sleeker which I think would be cool. On the software aspect, there is so much room to improve! I learned a lot about c++ while working on the project, but the language has so much more that I haven’t even touched yet. I’m sure that I can cram more functionality into this thing without using more memory. I had a ton of fun working on this, and cannot wait to revisit it with new knowledge!",
            "IMAGE_10": "img/binary_clock/binary-clock-pcb.jpg",

        },
    },
    {
        "ID": "2",
        "TITLE": "Learning Software",
        "TITLE_COLOR": "COLOR_2",
        "TILE_TEXT": "- Learning to learn.",
        "TILE_IMAGE": "img/learning_electronics/matrix.jpg",
        "HEADER_IMAGE": "img/learning_electronics/lamp_laptop.jpg",
        "CONTENT": {
            "TITLE_1": "Getting Started",
            "TEXT_1": "The concept of learning itself is a skill in itself. There is a difference between getting good grades and having practical knowledge of the subject. Teaching myself software removed the pressure of having to get the grade, and allowed me to focus on gaining practical knowledge of the subject. There are plenty of resources out there exploring differing teaching methods, and since I was teaching myself I found these very helpful. My main goal with any topic is to really learn the underlying concepts and not just memorize them. Once I learn something in the practical sense, I should be able to use my knowledge to figure out specific implications. The chain rule in calculus is a great example of something that often gets memorized without understanding the underlying concepts. These concepts make it possible to bridge the gap between a math worksheet and using the chain rule to solve real-life problems. I found an excellent way of teaching myself this was through hands on projects. There is no better way to learn than using the material first hand. And I have found that the more I learn, the better I become at learning.",
            "TEXT_2": "When it comes to brainstorming project ideas, I have my methods. I try to find a project that solves a practical problem. I’ve learned that if I know I’ll actually use a project, my focus improves. Next, I try to find a slightly overly complex approach to solving the problem. I want to cover as many areas as possible with each project while really just focusing on one specific aspect during the project. A few examples would be the typing game I wrote for myself awhile ago. The practical problem it solves is to help me increase my typing speed with symbols. The main learning focus of the project was learning to use wx.python. During the project, I was exposed to many concepts of GUI design and general python. And in the process, I gained speed in my ability to type symbols on the keyboard. My binary clock is another great example. My learning focus was to gain familiarity with 0s and 1s. But I was able to use the project to learn so much more. In the end, I made a cool clock and learned a whole lot. I am constantly keeping an eye out for anything I can use as a learning opportunity.",
            "IMAGE_1": "img/learning_electronics/power_supplys.jpg",
            "TEXT_3": "It seems that math and software go hand in hand. For this reason, I decided that revisiting math was very important to my new career. While I had completed a trigonometry class in High School, I knew that jumping into calculus would be a big leap. I started with a pre-calculus class and then jumped straight into a calculus textbook. I was shocked to find that not only was higher math making sense, I loved it. For a minute I was considering pursuing a math career over coding. Engineering in general pulls a lot from math, and I feel being solid on these concepts has been crucial to my ability to learn software.",
            "IMAGE_2": "img/learning_electronics/zach.gif",
            "TEXT_4": "Along with math, I try to teach myself as many different concepts. Having a wide range of minor experiences gives me a peak into so many different potential career fields. I look forward to one day being able to focus all my energy on getting really proficient at one specific coding language. Having a wide base of different experiences is good on so many levels. The more coding languages I am exposed to, the more the underlying concepts behind software, in general, make sense. I get to learn what I enjoy and what I don’t.",
            "TEXT_5": "Through my exploring and experimenting with coding, I have given myself a wide knowledge base. I started with c++ because I heard that it forced you to understand concepts other languages have abstracted away. I cannot imagine trying to teach myself memory management only knowing python. Though I am no expert in any one language, I now have at least some experience in c++, c, go, python, r, html, css, javascript, linux, bash script, and electrical engineering. I hope to use this wide base to my benefit as I slowly hone in specific skills.",
            "IMAGE_3": "img/learning_electronics/mr-incredible.jpg",
            "TEXT_5": "I’ve come so far, but still have much further to go. I really want to find a job that allows me the space to really focus on getting good at one specific language. Once I am working full-time in the industry I want to return to school to finish my bachelor's and maybe beyond. In the not-so-distant future, electrical engineering has started to make more sense recently. I want to pursue this and spend more time focusing on the electrical aspects of my projects.",
        },
    },
    {
        "ID": "3",
        "TITLE": "Hill Top Bike Park",
        "TITLE_COLOR": "COLOR_1",
        "TILE_TEXT": "- Bugs are no match for a bug net.",
        "TILE_IMAGE": "img/trail_building_alaska/mini_ex.jpg",
        "HEADER_IMAGE": "img/trail_building_alaska/rock_lip.jpg",
        "CONTENT": {
            "TITLE_1": "Three Idiots and an Excavator",
            "IMAGE_1": "img/trail_building_alaska/orange_mini.jpg",
            "TEXT_1": "In 2021, halfway into my first term back in college, I got a call from a friend of a friend asking if I would be interested in a job helping build a bike park in Alaska. Despite being busy with school, I packed my bags and headed to Alaska for two months. I had never been to Alaska or built trails professionally before, but the opportunity seemed too good to pass up!",
            "TEXT_2": "As soon as I arrived, I learned that due to some timing issues we had lost two crew members, leaving just Josh, Travis, and myself to build an entire bike park, from scratch, in two months. Luckily, Hill Top is a very small park at roughly 300ft of elevation from top to bottom. Nonetheless, this was a massive undertaking. Hill Top is a nonprofit ski area looking to expand its operations into the summer. Hilltop as far as the terrain goes is relatively boring, flat and lacking in natural features. Josh had promised management that we would build feature-rich trails. To me this seemed far-fetched, especially with only three of us! ",
            "IMAGE_2": "img/trail_building_alaska/bridge.jpg",
            "TEXT_3": "My usual methods of finding cool terrain to build trails were of little use here. Instead, I watched as Josh stubbornly dug up big boulders with the machines and manually placed them throughout the trails. He was creating massive man-made rock gardens. I slowly learned to stop thinking about trail building with my hands and start thinking about trail building with a machine. Usually, I let the natural terrain do the work, digging only where I absolutely must. At Hilltop, I learned to look at the terrain like a blank canvas, building literally whatever I wanted wherever I wanted, the process enabled by the use of heavy equipment.",
            "IMAGE_5": "img/trail_building_alaska/mini_ex.jpg",
            "IMAGE_3": "img/trail_building_alaska/josh_rock_garden.jpg",
            "TEXT_4": "I learned how to operate our mini-excavator and quickly was able to apply my previous trail-building knowledge to it. Bike park jump lines are very hard to create, they need to be fun for riders who are clearing the jumps as well as riders rolling through at a slower speed. This meant a lot of fine-tuning and learning from our mistakes as we built. We religiously adhered to the golden rule of trail building: Build jump trails from the top down. Building jump trails from the bottom up will make gauging the future trail speed virtually impossible. This is a concept very familiar to me and should be to anybody that has tried to build a jump line before. During this project, I really enjoyed being an expert on certain concepts and still learning so much about others.",
            "IMAGE_4": "img/trail_building_alaska/dirt-pile.jpg",
            "TEXT_5": "While I was out learning in the field, I was also finishing up my first quarter at Whatcom Community College. The term did not go well for me in that while I earned A’s in both classes I felt as though I wasn’t really learning through the virtual classes. This was when I decided to try self-teaching for a bit. Armed with Morris Kline’s Calculus textbook and the internet, I taught myself basic calculus and web development in the time I wasn’t busy on the mountain. Most days, I was spending 10-12 hours of intense physical labor on the mountain, and then 3-4 hours of self-motivated and self-taught school. If I ever doubt my ability to be self-motivated in the future, I hope I remember those 2 months in Alaska!",
            "IMAGE_6": "img/trail_building_alaska/behind-the-sticks.jpg",
            "TITLE_2": "We Did it",
            "TEXT_6": "The job required a lot more than just manual labor. Building trails that are fun is very lucrative and up to interpretation. Josh, Travis, and I all had a ton of our own trail-building experience. This means we all had our own ideas of how the trail should be built. This led to a lot of conflicts of interest. Being on a time crunch did not help this fact. Communication under these various stresses was vital to our success. I was forced to focus on my ability to communicate my ideas in a clear way that is understandable to the person I am talking to. ",
            "IMAGE_8": "img/trail_building_alaska/hilltop-website.png",
            "TEXT_7": "After two long, hard months, the three of us, had successfully created a bike park! It was small but contained many features new to Alaska. Jumps that you didn’t need to pedal or break into were a new thing here. Not to mention the amount of work we spent tuning the shape of the lips on the jumps so as to not throw beginner riders over the handlebars. The park was a smashing success and brought traffic from all over Alaska. Hilltop signed a contract with Pro Trails to build there for years to come. I was happy to be a part of such a successful project. ",
            "IMAGE_7": "img/trail_building_alaska/bug_net.jpg",
        },
    },
    {
        "ID": "4",
        "TITLE": "Trail Building",
        "TITLE_COLOR": "COLOR_3",
        "TILE_TEXT": "- Trails don't build themselves.",
        "TILE_IMAGE": "img/trail_building_washington/moss_remove.jpg",
        "HEADER_IMAGE": "img/trail_building_washington/chainsaw_1.jpg",
        "CONTENT": {
            "TITLE_1": "Manual Labor",
            "TEXT_1": "If we count building poor-quality jumps as a kid, trail building, then I have been building my entire life! Mountain biking is unique because the trails required for mountain biking to exist are largely user built. It’s not like skiing where either a resort maintains the terrain or it's 100% untouched. Mountain bike trails require tons of work to build, and even more work to maintain. This maintenance is actually what ushered a young adult me into digging. I found an old jump line some people had built and forgotten in my hometown of Bend, Oregon. I bought some shovels and went to work! As a mountain biker, building trails is just as important as riding them.",
            "TEXT_4": "Aside from the satisfaction of a finished product, there are many things I enjoy about trail building. It is quite peaceful to be out in the woods for a long time quietly working away by yourself or with a few friends. I sometimes use it as a type of meditation in a way, to get away from other things in my life. I love the creative aspect of trail building. I’m always trying to find unique features to build. The crazier something looks while still being rideable is all the more fun to me. Life is too short for boring trails!",
            "IMAGE_1": "img/trail_building_washington/drop.JPG",
            "TEXT_5": "Building scary or weird-looking features often means that I have to be the one to test them out. This drop pictured above is one such feature. I ended up removing it because too many people crashed on it…all part of the learning experience.",
            "IMAGE_4": "img/trail_building_washington/grimice1.jpg",
            "IMAGE_5": "img/trail_building_washington/cougar_jump.jpg",
            "TEXT_6": "I try to diversify my time spent digging between my own projects, and friends' projects and restoring old trails. Obviously, the glory work is building a new trail. However, old trails always need work and are constantly being overlooked. I spent years maintaining old trails before I even attempted to build my own. This allowed me to learn from others while still being the one building. I still try to organize work parties when I can to restore old trails. Most of my friends also build trails and we all spend a fair amount of time helping maintain and improve each other's trails.",
            "IMAGE_6": "img/trail_building_washington/rock-done-v-raw.JPG",
        },
    },
    {
        "ID": "5",
        "TITLE": "Ferrous Custom Hardtail",
        "TITLE_COLOR": "COLOR_3",
        "TILE_TEXT": "- Designing and building a Dh hartail.",
        "TILE_IMAGE": "img/ferrous/v2_fancy1.jpg",
        "HEADER_IMAGE": "img/ferrous/v2_fancy2.jpg",
        "CONTENT": {
            "TITLE_1": "How it Started",
            "TEXT_1": "If they don’t make it, build it! That was the approach behind this project. My buddy Pat learned through the grapevine that I was in a hardtail phase and had some weird geometry ideas. Pat, who welds bikes on the side for fun, was looking for test subjects to try out frames while he fine tuned his building methods. To say the least, I was more than willing. Pat and I grabbed a beer over some graph paper and a pencil. Pat loved that I wanted to try something different, and the rest as they say, is history. ",
            "IMAGE_2": "img/ferrous/truck_bed.jpg",
            "TEXT_2": "Having worked around mountain bikes most of my career, I am very comfortable talking numbers, headtube, reach, etc. Despite this, I had never paid much attention to the design of hardtails. This changed when I built up an old Transition TransAm frame that I had been gifted. Naturally, being me I put the largest fork I could up front. At 160mm it was overforked by 30mm. Now, I knew this would ride like garbage, I was however unprepared for exactly how bad it would be. This really got my head turning thinking about how potential geometry changes would affect the bike. I was really fascinated by how hardtail geometry seemed to go against everything I had learned with full-suspension bikes. On top of this, nobody else seemed to be talking about what I was seeing.",
            "TEXT_3": "Obviously, a hardtail does not behave like a full-suspension bike. Yet, 99% of hardtail geometry is based on or directly copies the geometry of their full-suspension counterparts. Why is this? My guess is most companies put R&D into bikes that are an easier sell, not aggressive hardtails. But neither Pat or I cared about selling this design, so we took a wild approach to the geometry. How a bike “feels” when it rides is extremely hard to quantify. I started by taking note of how both kinds of bike geometry changed as the bike cycled through varied terrain. When you ride a bike, specifically downhill, where you sit in the travel is very different at full travel or even sag. As the full suspension compresses, it sinks straight into the ground and all angles more or less maintain their slope. The hardtail however pivots around the rear axle, and every single angle is changed. The only things noticeably changing on the full suspension are the chainstay length and the bottom bracket drop. The changes in a hardtail are totally different. Most noticeable, the headtube starts steepening its angle at an exponential rate. The stack height starts to plummet, again exponentially. The only thing that noticeably doesn’t drop out from under you is the bottom bracket height, it stays relatively put. These differences made me feel like I could design something better than what I was riding. ",
            "TITLE_2": "Version #1",
            "TEXT_4": "The goal of making a hardtail that rides like a full suspension bike requires a much broader approach than just copying geometry. I started with the Transition Sentinel, a ground-breaking bike in the realm of capable mid-travel bikes, and my target bike for ride feel. For the first version, all I focused on was the headtube angle. This obviously is a huge part of why the Sentinel rides so well and why the Trans Am rode so poorly. I chose to base my numbers on a 170mm fork. My thought being, I would use the first 150mm of the fork to ride and the last 20mm for big compressions. I settled on a 63-degree head tube angle. Paired with the fork set up very stiff it should give me a riding 64-65-degree angle. I kept the reach at 450mm and 420mm for the chainstays, I like the fit of medium frames and felt no reason for there to be a longer reach. For the bottom bracket, I ended up with a 70mm drop. Pat liked the design and within a few months, we had ourselves a frame!",
            "IMAGE_1": "img/ferrous/v2_benchtop.JPG",
            "TEXT_5": "Honestly, it really was a great first attempt. It rode very well but the design was clearly not fully thought through. I rode that bike like it was a downhill bike for half a season before eventually breaking it. After bribing Pat with some beer, he fixed it up and I was back on it for another month before it gave out a second time. Clearly, it was time to start from scratch with a new frame. Pat was eager to try out some new frame-building techniques and with my head full of creative geometry ideas, we set out to design and plan and craft a second one. ",
            "IMAGE_4": "img/ferrous/fix_me_plz.jpg",
            "IMAGE_3": "img/ferrous/v1_v2_sidebyside.jpg",
            "TITLE_3": "Version #2",
            "TEXT_6": "With the headtube angle figured out, I turned my attention to the bottom bracket drop for Version 2. The bottom bracket drop is critical for handling any bike down a hill. At 70mm, our Version1 sat almost 50mm lower static than my Knolly Delirium at the time. At sag, they were almost identical. This was good, but I felt the bikes should match at ride height, not sag. Keep in mind that to most people, a 70mm bottom bracket drop is extreme! For example, the Chromag Doctahawk has a 48mm drop. I wasn’t worried though because the Knolly’s bottom bracket was dropping 170mm through travel and Version 1 was only dropping 45mm. Plenty of room!! For Version 2, we dropped the bottom bracket down to 80mm and it made a world of difference on descents while really not changing the number of pedal strikes. We also shaved half a degree off the headtube but kept the rest the same. ",
            "IMAGE_5": "img/ferrous/v2_fancy1.jpg",
            "IMAGE_6": "img/bike_riding/bike_jumping.jpg",
            "TEXT_7": "After riding this bike, I have to say that it has been wildly successful at achieving our goals. Aside from the jarring fact that there is no rear suspension, Version 2 really feels like a full suspension. The low bottom bracket and slack ride height headtube make it corner like no other hardtail I’ve ridden. The moderate reach and chainstays make it fit just like a medium-full suspension bike. It encourages you to ride over the front without trying to throw you over the bars. I am very happy with my design and with Pat’s refined welding. ",
            "TITLE_4": "Future",
            "TEXT_8": "I am happy to say that Version 2 has been going strong for over a year. We are both pretty pleased with it and often talk about doing a third version, although I’m not really sure what we would change. We could possibly add another 10mm to the bottom bracket drop and take another half degree off, but really this is just out of curiosity for trying to find the limit to bottom bracket drop. The current end result is one of the most fun bikes I have ever ridden.",
            "IMAGE_7": "img/ferrous/headtube_badge.jpg",
        }
    },
    {
        "ID": "6",
        "TITLE": "Automated Bike Lights",
        "TITLE_COLOR": "COLOR_3",
        "TILE_TEXT": "- Hands free, care free lights for my commuter bike.",
        "TILE_IMAGE": "img/bike_lights/front-light.jpg",
        "HEADER_IMAGE": "img/bike_lights/bike-side-shot.jpg",
        "CONTENT": {
            "TITLE_1": "The Problem",
            "TEXT_1": "The lights on my commuter bike needed to be recharged and I would often fail to do this, resulting in many a pedal home in the dark. ",
            "TITLE_2": "The Solution",
            "TEXT_2": "Create a fully automated light system that charges itself and turns off/on depending on the light outside.",
            "IMAGE_1": "img/bike_lights/front-light.jpg",
            "TEXT_3": "Designing a system that lights a road in front of you is not hard. I wanted to design a system that would do this while seamlessly slipping into the background. If I’m pedaling the bike, I want the light to turn on and off before I have time to think about it. Fully automated designs are often created in the name of novelty and lack any actual benefit. But with a task this simple, I feel that no user interface will create a better end result. After all, my below 50% success rate of remembering to charge lights is not that hard to beat.", 
            "TEXT_4": "I started the design with a Shimano Dynamo hub as a power source. It gives me a nice AC 1-6 watt output anytime the bike is moving faster than 5mph. I built a circuit that takes this input and returns a nice regulated DC 7.2 volts. This is all fine and dandy until you stop at a light and your tail lights stop flashing. So next to the hub, I need a battery to store power for short stops. Switching between these power sources will ensure that the lights are always on when I need them.",
            "IMAGE_2": "img/bike_lights/testing-hub.jpg",
            "TEXT_5" : "My commuter bike has a very specific look to it and a bunch of wires and lights all over it kinda ruins it. So the lighting challenge became trying to figure out how to visually make the lights blend into the bike. For the front, I have a cheapo light I ordered off Amazon. I originally intended to use the light as a placeholder while I figured out all the other details, but it actually performs quite well in real life. I’m still up in the air about replacing it. For the taillights, I decided to break out the 3D printer and design my own. I’m pretty happy with the result, I still might change the front light out but as of now it doesn’t look too bad. ",
            "IMAGE_3": "img/bike_lights/versions-rear-lights.jpg",
            "TEXT_6": "To control all of this, I was torn between making a fully analog system or using a microcontroller. I ended up using a microcontroller for the simple reason that it is so much easier to quickly adjust its functionality. One variable is figuring out how dark is dark enough to turn the lights on. As of now, I’m using an Arduino Nano to run the show. If in the future I finally settle on a design I am happy with, I would love to remove the Arduino in favor of a fully analog system. ",
            "IMAGE_4": "img/bike_lights/bike-lights-board.jpg",
            "TEXT_7": "As it sits currently, the system is working and has been in use for a couple of months. The battery system is not hooked up yet, as I’ve been waiting for the motivation of winter to tackle this. Aside from that, the rest of the system works flawlessly, and it turns out that automatic bike lights are pretty consistently useful. I no longer have to even consider lighting when I cruise around after dark. Even going under a tunnel, the lights flick on and then off again as I exit. I’m excited to continue the project and can’t wait for an even more refined product!",
            "TITLE_3": "Skills Used",
            "TEXT_8": "This has been a pretty diverse project, and I used a lot of different skills on it, such as mechanical problem-solving to attach the physical lights and wires. I obviously had to use electrical engineering to make everything light-up paired with some basic Arduino code. I used 3D modeling to create the tail lights. Above all, I have had to use management to keep myself on track and make sure I ended up with a working system! ",
            "TITLE_4": "Future",
            "TEXT_9": "Looking into the future, there are still steps to take before I’d call it complete. First off, I need to finish version one of the battery system. Once that is in place I can begin experimenting with wait times for keeping the lights on. Aside from this, I need to continue to adjust the algorithm in charge of turning the lights on and off. Currently, it takes an average of the light readings over the last 10 seconds, but this sometimes turns the lights on at odd times. Next, I really need to make the tail lights just a tad bit brighter. I hope to then use the skills I develop in the future to make a final version that is a fraction of the size. Once that is done, I will never have to think about bike lights again!",
            "IMAGE_5": "img/bike_lights/rear-lights-side.jpg",
            "IMAGE_6": "img/bike_lights/bike-lights-case.jpg",
            "IMAGE_7": "img/bike_lights/bike-lights-pcb.jpg",
        }
    }
];